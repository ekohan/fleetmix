{
  "top_level": {
    "explicit_exports": [
      "__version__",
      "optimize",
      "load_demand",
      "generate_vehicle_configurations",
      "generate_feasible_clusters",
      "optimize_fleet",
      "improve_solution",
      "Parameters",
      "FleetmixSolution",
      "VehicleConfiguration",
      "VehicleSpec",
      "Cluster",
      "Customer",
      "DepotLocation",
      "VRPType",
      "convert_to_fsm",
      "run_optimization",
      "register_clusterer",
      "register_route_time_estimator",
      "register_solver_adapter",
      "Clusterer",
      "RouteTimeEstimator",
      "SolverAdapter"
    ],
    "imports": [],
    "from_imports": [
      "api.optimize",
      "pipeline.vrp_interface.convert_to_fsm",
      "core_types.VehicleSpec",
      "interfaces.Clusterer",
      "core_types.Customer",
      "interfaces.SolverAdapter",
      "core_types.FleetmixSolution",
      "core_types.VehicleConfiguration",
      "post_optimization.merge_phase.improve_solution",
      "utils.vehicle_configurations.generate_vehicle_configurations",
      "pipeline.vrp_interface.VRPType",
      "registry.register_clusterer",
      "clustering.generator.generate_feasible_clusters",
      "optimization.core.optimize_fleet",
      "core_types.DepotLocation",
      "registry.register_solver_adapter",
      "core_types.Cluster",
      "utils.data_processing.load_customer_demand",
      "pipeline.vrp_interface.run_optimization",
      "interfaces.RouteTimeEstimator",
      "registry.register_route_time_estimator",
      "config.parameters.Parameters"
    ],
    "path": "src/fleetmix/__init__.py"
  },
  "submodules": {
    "pipeline": {
      "explicit_exports": [
        "VRPType",
        "convert_to_fsm",
        "run_optimization"
      ],
      "imports": [],
      "from_imports": [
        "vrp_interface.run_optimization",
        "vrp_interface.convert_to_fsm",
        "vrp_interface.VRPType"
      ],
      "path": "src/fleetmix/pipeline/__init__.py"
    },
    "post_optimization": {
      "explicit_exports": [
        "improve_solution"
      ],
      "imports": [],
      "from_imports": [
        "merge_phase.improve_solution"
      ],
      "path": "src/fleetmix/post_optimization/__init__.py"
    },
    "config": {
      "explicit_exports": [
        "Parameters"
      ],
      "imports": [],
      "from_imports": [
        "parameters.Parameters"
      ],
      "path": "src/fleetmix/config/__init__.py"
    },
    "optimization": {
      "explicit_exports": [
        "optimize_fleet"
      ],
      "imports": [],
      "from_imports": [
        "core.optimize_fleet"
      ],
      "path": "src/fleetmix/optimization/__init__.py"
    },
    "clustering": {
      "explicit_exports": [
        "generate_feasible_clusters"
      ],
      "imports": [],
      "from_imports": [
        "generator.generate_feasible_clusters"
      ],
      "path": "src/fleetmix/clustering/__init__.py"
    },
    "preprocess": {
      "explicit_exports": [
        "explode_customer",
        "maybe_explode"
      ],
      "imports": [],
      "from_imports": [
        "demand.maybe_explode",
        "demand.explode_customer"
      ],
      "path": "src/fleetmix/preprocess/__init__.py"
    },
    "utils": {
      "explicit_exports": [
        "PROJECT_ROOT",
        "get_project_root",
        "ModelDebugger"
      ],
      "imports": [],
      "from_imports": [
        "project_root.get_project_root",
        "debug.ModelDebugger",
        "project_root.PROJECT_ROOT"
      ],
      "path": "src/fleetmix/utils/__init__.py"
    },
    "cli": {
      "explicit_exports": [],
      "imports": [],
      "from_imports": [],
      "path": "src/fleetmix/cli/__init__.py"
    },
    "benchmarking": {
      "explicit_exports": [
        "MCVRPInstance",
        "CVRPInstance",
        "CVRPSolution",
        "parse_mcvrp",
        "CVRPParser",
        "convert_mcvrp_to_fsm",
        "convert_cvrp_to_fsm",
        "CVRPBenchmarkType",
        "VRPSolver"
      ],
      "imports": [],
      "from_imports": [
        "parsers.mcvrp.parse_mcvrp",
        "converters.cvrp.CVRPBenchmarkType",
        "models.CVRPInstance",
        "parsers.cvrp.CVRPParser",
        "models.MCVRPInstance",
        "solvers.VRPSolver",
        "converters.cvrp.convert_cvrp_to_fsm",
        "models.CVRPSolution",
        "converters.mcvrp.convert_mcvrp_to_fsm"
      ],
      "path": "src/fleetmix/benchmarking/__init__.py"
    },
    "merging": {
      "explicit_exports": [
        "generate_merge_phase_clusters"
      ],
      "imports": [],
      "from_imports": [
        "core.generate_merge_phase_clusters"
      ],
      "path": "src/fleetmix/merging/__init__.py"
    },
    "benchmarking.parsers": {
      "explicit_exports": [
        "CVRPInstance",
        "CVRPParser",
        "CVRPSolution",
        "parse_mcvrp"
      ],
      "imports": [],
      "from_imports": [
        "cvrp.CVRPInstance",
        "cvrp.CVRPSolution",
        "cvrp.CVRPParser",
        "mcvrp.parse_mcvrp"
      ],
      "path": "src/fleetmix/benchmarking/parsers/__init__.py"
    },
    "benchmarking.datasets": {
      "explicit_exports": [],
      "imports": [],
      "from_imports": [],
      "path": "src/fleetmix/benchmarking/datasets/__init__.py"
    },
    "benchmarking.converters": {
      "explicit_exports": [
        "CVRPBenchmarkType",
        "convert_cvrp_to_fsm",
        "convert_mcvrp_to_fsm"
      ],
      "imports": [],
      "from_imports": [
        "cvrp.CVRPBenchmarkType",
        "cvrp.convert_cvrp_to_fsm",
        "mcvrp.convert_mcvrp_to_fsm"
      ],
      "path": "src/fleetmix/benchmarking/converters/__init__.py"
    },
    "benchmarking.solvers": {
      "explicit_exports": [
        "VRPSolver"
      ],
      "imports": [],
      "from_imports": [
        "vrp_solver.VRPSolver"
      ],
      "path": "src/fleetmix/benchmarking/solvers/__init__.py"
    },
    "benchmarking.models": {
      "explicit_exports": [
        "CVRPInstance",
        "CVRPSolution",
        "MCVRPInstance"
      ],
      "imports": [],
      "from_imports": [
        "models.CVRPSolution",
        "models.MCVRPInstance",
        "models.CVRPInstance"
      ],
      "path": "src/fleetmix/benchmarking/models/__init__.py"
    }
  },
  "potential_leaks": [],
  "summary": {
    "top_level_exports": 23,
    "total_submodule_exports": 33,
    "submodules_with_explicit_all": 13,
    "total_submodules": 15,
    "potential_leaks_count": 0
  }
}